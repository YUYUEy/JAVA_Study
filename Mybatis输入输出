==>>	Mybatis介绍
MyBatis 本是apache的一个开源项目iBatis, 2010年这个项目由apache software foundation 迁移到了google code，并且改名为MyBatis 。
2013年11月迁移到Github。
 	MyBatis是一个优秀的持久层框架，它对jdbc的操作数据库的过程进行封装，使开发者只需要关注 SQL 本身，而不需要花费精力去处理例如注册驱动、
    创建connection、创建statement、手动设置参数、结果集检索等jdbc繁杂的过程代码。
Mybatis通过xml或注解的方式将要执行的各种statement（statement、preparedStatemnt、CallableStatement）配置起来，并通过java对象和statement中的sql
进行映射生成最终执行的sql语句，最后由mybatis框架执行sql并将结果映射成java对象并返回。
********************************************************************************************

1=> Mybatis的输入参数简单类型string integer pojo自定义的对象
    包装类QueryVo, xml...
2=> 输出参数；简单类型ResultMap integer POJO user的类路径
    《POJO》、ResultMap、手动映射、数据表字段与POJO属性名不一致
3=> 动态sql：
    if: 
        判断是否有此条件  <if test="username !=null && username !=''"></if>
    where:  
        当多个条件时，可有可无 where and 条件  where去掉第一个  前and
    sql片段:
        <sql id='name1'>select... </sql>
        <include>
    foreach:
         QueryVo(list ids integer[])
         <foreach collection="ids">
         
 ********************************************************************************************
==>>    使用 MyBatis 的主要 Java 接口就是 SqlSession。 
==>>    现在你有一个 SqlSessionFactory,可以用来创建 SqlSession 实例。
==>>    Mapper XML 文件-->>
        SQL 映射文件有很少的几个顶级元素（按照它们应该被定义的顺序）：

                cache – 给定命名空间的缓存配置。
                cache-ref – 其他命名空间缓存配置的引用。
                resultMap – 是最复杂也是最强大的元素，用来描述如何从数据库结果集中来加载对象。
                sql – 可被其他语句引用的可重用语句块。
                insert – 映射插入语句
                update – 映射更新语句
                delete – 映射删除语句
                select – 映射查询语句
  --> resultMap 元素是 MyBatis 中最重要最强大的元素。
  --> 动态 SQL
             -->if
             -->choose (when, otherwise)
             -->trim (where, set)
             -->foreach
        
